language: python

# Run jobs on container-based infrastructure, can be overridden per job
sudo: false
addons:
  apt:
    packages:
        - pandoc

cache:
  directories:
    - $HOME/.cache/pip

env:
    global:
        - DEPENDS="ipython[notebook] sphinx matplotlib six"
        - PKG_NAME=nb2plots
        - INSTALL_TYPE="setup"
        # URL for travis wheel repo
        - TRAVIS_WHEELS=https://8167b5c3a2af93a0a9fb-13c6eee0d707a05fa610c311eec04c66.ssl.cf2.rackcdn.com

python:
    - 3.3
    - 3.4
    - 3.5

matrix:
  include:
    - python: 2.7
      env:
        - COVERAGE=1
        - DOCTESTS=1
    # Absolute minimum dependencies
    # Check also requirements.txt
    - python: 2.7
      env:
          - DEPENDS="ipython[notebook]==3.0.0 sphinx==1.1.3 matplotlib==1.1.0 six==1.4 numpy==1.6.1"
    - python: 2.7
      env:
        - INSTALL_TYPE=sdist
    - python: 2.7
      env:
        - INSTALL_TYPE=wheel
    - python: 2.7
      env:
        - INSTALL_TYPE=requirements
        - DEPENDS=

before_install:
    - source tools/travis_tools.sh
    - virtualenv --python=python venv
    - source venv/bin/activate
    - python -m pip install --upgrade pip wheel
    - python --version  # just to check
    - retry pip install nose # always
    - retry pip install -f $TRAVIS_WHEELS $DEPENDS
    - if [ "${COVERAGE}" == "1" ]; then
      pip install coverage;
      pip install coveralls;
      fi

install:
    - |
      if [ "$INSTALL_TYPE" == "setup" ]; then
          python setup.py install
      elif [ "$INSTALL_TYPE" == "sdist" ]; then
        python setup.py egg_info  # check egg_info while we're here
        python setup.py sdist
        wheelhouse_pip_install dist/*.tar.gz
      elif [ "$INSTALL_TYPE" == "wheel" ]; then
        pip install wheel
        python setup.py bdist_wheel
        wheelhouse_pip_install dist/*.whl
      elif [ "$INSTALL_TYPE" == "requirements" ]; then
        wheelhouse_pip_install -r requirements.txt
        python setup.py install
      fi

script:
    # Change into an innocuous directory and find tests from installation
    - mkdir for_testing
    - cd for_testing
    - if [ "${COVERAGE}" == "1" ]; then
      cp ../.coveragerc .;
      COVER_ARGS="--with-coverage --cover-package $PKG_NAME";
      fi
    - if [ "${DOCTESTS}" == "1" ]; then
      DOCTEST_ARGS="--with-doctest";
      fi
    - nosetests $COVER_ARGS $DOCTEST_ARGS $PKG_NAME

after_success:
    - if [ "${COVERAGE}" == "1" ]; then coveralls; fi
